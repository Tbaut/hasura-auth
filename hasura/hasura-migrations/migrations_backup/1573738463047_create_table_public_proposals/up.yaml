- args:
    sql: "CREATE TABLE \"public\".\"proposals\"(\"id\" serial NOT NULL, \"onchain_id\"
      integer NOT NULL, \"post_id\" integer NOT NULL, \"created_at\" timestamptz NOT
      NULL DEFAULT now(), \"updated_at\" timestamptz NOT NULL DEFAULT now(), \"method_name\"
      text NOT NULL, \"method_arguments\" text, \"deposit\" integer NOT NULL, \"referendum\"
      boolean NOT NULL DEFAULT false, PRIMARY KEY (\"id\") , FOREIGN KEY (\"post_id\")
      REFERENCES \"public\".\"posts\"(\"id\") ON UPDATE restrict ON DELETE restrict,
      UNIQUE (\"id\"), UNIQUE (\"onchain_id\"), UNIQUE (\"post_id\")); COMMENT ON
      TABLE \"public\".\"proposals\" IS E'on chain proposal or referendum';\nCREATE
      OR REPLACE FUNCTION \"public\".\"set_current_timestamp_updated_at\"()\nRETURNS
      TRIGGER AS $$\nDECLARE\n  _new record;\nBEGIN\n  _new := NEW;\n  _new.\"updated_at\"
      = NOW();\n  RETURN _new;\nEND;\n$$ LANGUAGE plpgsql;\nCREATE TRIGGER \"set_public_proposals_updated_at\"\nBEFORE
      UPDATE ON \"public\".\"proposals\"\nFOR EACH ROW\nEXECUTE PROCEDURE \"public\".\"set_current_timestamp_updated_at\"();\nCOMMENT
      ON TRIGGER \"set_public_proposals_updated_at\" ON \"public\".\"proposals\" \nIS
      'trigger to set value of column \"updated_at\" to current timestamp on row update';\n"
  type: run_sql
- args:
    name: proposals
    schema: public
  type: add_existing_table_or_view
