apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
  labels:
    app: auth-server
  name: auth-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-server
  template:
    metadata:
      labels:
        app: auth-server
    spec:
      containers:
      - name: auth-server
        image: gcr.io/test-installations-222013/polkassembly-auth-server:${DOCKER_TAG}
        imagePullPolicy: Always
        env:
        - name: JWT_KEY_PASSPHRASE
          valueFrom:
            configMapKeyRef:
              key: JWT_KEY_PASSPHRASE
              name: auth-server-config
        - name: JWT_PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              key: private.key
              name: auth-jwt-key
        - name: JWT_PUBLIC_KEY
          valueFrom:
            secretKeyRef:
              key: public.key
              name: auth-jwt-key
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              key: DATABASE_URL
              name: auth-server-config
        - name: SENDGRID_API_KEY
          valueFrom:
            configMapKeyRef:
              key: SENDGRID_API_KEY
              name: auth-server-config
        - name: PORT
          valueFrom:
            configMapKeyRef:
              key: PORT
              name: auth-server-config
        - name: PROPOSAL_BOT_USER_ID
          valueFrom:
            configMapKeyRef:
              key: PROPOSAL_BOT_USER_ID
              name: auth-server-config
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              key: NODE_ENV
              name: auth-server-config
        - name: HASURA_POST_SUBSCRIPTION_SECRET
          valueFrom:
            configMapKeyRef:
              key: HASURA_POST_SUBSCRIPTION_SECRET
              name: auth-server-config
        - name: HASURA_EVENT_SECRET
          valueFrom:
            configMapKeyRef:
              key: HASURA_EVENT_SECRET
              name: auth-server-config
        - name: DOMAIN_NAME
          valueFrom:
            configMapKeyRef:
              key: DOMAIN_NAME
              name: auth-server-config
        - name: DOMAIN_PROTOCOL
          valueFrom:
            configMapKeyRef:
              key: DOMAIN_PROTOCOL
              name: auth-server-config
      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.14
        command: ["/cloud_sql_proxy",
                  "-instances=${CLOUDSQL_INSTANCE_CONNECTION_NAME}=tcp:5432",
                  "-credential_file=/secrets/cloudsql/test-installations-222013-bb0efcdf24f9.json"]
        securityContext:
          runAsUser: 2  # non-root user
          allowPrivilegeEscalation: false
        volumeMounts:
        - name: cloudsql-instance-credentials
          mountPath: /secrets/cloudsql
          readOnly: true
      volumes:
      - name: cloudsql-instance-credentials
        secret:
          secretName: cloudsql-instance-credentials
      imagePullSecrets:
      - name: regcred
